div.literate_cell {
    /* avoid page breaking on code cells when printing */
    @media print {
        page-break-inside: avoid;
    }
}

/* any special styling for code cells that are currently running goes here */
div.literate_cell.running {
}

div.input {
    page-break-inside: avoid;
    .hbox();
}

@media (max-width: @screen-xs-min) {
    // move prompts above code on small screens
    div.input {
        .vbox();
    }
}

div.prompt_container {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: flex-start;
    text-align: right;
}

/* input_area and input_prompt must match in top border and margin for alignment */
div.input_prompt {
    color: @input_prompt_color;
    border-top: 1px solid transparent;
}

div.run_this_cell {
    display: none;
    cursor: pointer;
    color: #333;
    padding-top: 5px;
    padding-bottom: 5px;
    padding-left: 2ex;
    padding-right: 2ex;
    width: 1ex;
}

// set the prompt width
div.prompt {
    min-width: 15ex;
}

@media (-moz-touch-enabled: 1), (any-pointer: coarse) {
    div.run_this_cell {
        display: block;
    }
}

// The styles related to div.highlight are for nbconvert HTML output only. This works
// because the .highlight div isn't present in the live notebook. We could put this into
// nbconvert, but it easily falls out of sync, can't use our less variables and doesn't
// help the basic template when paired with our CSS.

div.input_area > div.highlight {
    margin: @code_padding;
    border: none;
    padding: 0px;
    background-color: transparent;
}

div.input_area > div.highlight > pre {
    margin: 0px;
    border: none;
    padding: 0px;
    background-color: transparent;
}

// from textcell

.literate_cell.rendered .input_area {
    display: none;
}

.literate_cell.rendered .rendered_html {
    overflow-x: auto;
    
    // Content in the y direction should cause the rendered content to grow,
    // the overflow-x: auto causes chrome to assume the same of y, so we need
    // to tell it explicitly otherwise.
    overflow-y: hidden;
}

.literate_cell.rendered .rendered_html {
	tr, th, td {
		max-width: none;
	}
}

.literate_cell.unrendered .text_cell_render {
    display:none;
}

.literate_cell .dropzone .input_area {
  border: 2px dashed #bababa;
  margin: -1px;
}

.cm-header-1,
.cm-header-2,
.cm-header-3,
.cm-header-4,
.cm-header-5,
.cm-header-6 {
    font-weight: bold;
    font-family: @font-family-sans-serif;
}

.cm-header-1 { font-size: 185.7%; }
.cm-header-2 { font-size: 157.1%; }
.cm-header-3 { font-size: 128.6%; }
.cm-header-4 { font-size: 110%; }
.cm-header-5 {
    font-size: 100%;
    font-style: italic;
}
.cm-header-6 {
    font-size: 100%;
    font-style: italic;
}